digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "base:ArrayAttributeSpecification" "base:EventSpecification" "base:EnumType" "base:UsingForDirective" "base:ConstantType" "base:MapType" "base:DualMemoryType" "base:ModifierOverrideSpecification" "base:AttributeSpecification" "base:Abstract" "base:NonConstantAttributeSpecification" "base:ModifierBehaviour" "base:ParameterType" "base:ParameterTypeWithDataLocation" "base:FixedValue" "base:ArrayValueSpecification" "base:StringValue" "base:MapAttributeSpecification" "base:Visibility" "base:BytesValue" "base:ValueSpecification" "base:NonConstantType" "base:CodelessFunctionSpecification" "base:SmartContract" "base:ModifierSpecification" "base:IntValue" "base:StructType" "base:Contract" "base:ModifierOverrideTipe" "base:ArrayValue" "base:ArrayDimension" "base:Interface" "base:ArrayType" "base:Import" "base:ConstructorSpecification" "base:ReceiveSpecification" "base:FallbackSpecification" "base:FunctionSpecification" "base:BoolValue" "base:ContractAttributeSpecification" "base:Library" "base:ParameterVariableSpecification" "base:GenericValue" "base:DataLocation" "base:SingleMemoryType" "base:FunctionBehaviour" "base:FRBehaviour" "base:Type" "base:MapKeyType" ; /*classes style*/
	"base:" -> "https://chowlk.linkeddata.es/" [ label = "mod:createdWith" ];
	"base:StructType" -> "base:NonConstantAttributeSpecification" [ label = "base:hasNonConstantStructAttribute" ];
	"base:ConstructorSpecification" -> "base:ParameterVariableSpecification" [ label = "base:hasConstructorArguments" ];
	"base:AttributeSpecification" -> "xsd:string" [ label = "base:attributeName" ];
	"base:ReceiveSpecification" -> "xsd:string" [ label = "base:receiveCode" ];
	"base:FixedValue" -> "xsd:string" [ label = "base:simpleFixed" ];
	"base:FunctionSpecification" -> "base:ParameterVariableSpecification" [ label = "base:hasFunctionArguments" ];
	"base:DualMemoryType" -> "xsd:short" [ label = "base:memoryM" ];
	"base:Contract" -> "base:FallbackSpecification" [ label = "base:hasContractFallback" ];
	"base:ModifierSpecification" -> "base:ModifierOverrideSpecification" [ label = "base:hasOverrideReturn" ];
	"base:IntValue" -> "xsd:string" [ label = "base:simpleInt" ];
	"base:Contract" -> "base:Abstract" [ label = "base:isAbstract" ];
	"base:DualMemoryType" -> "xsd:short" [ label = "base:memoryN" ];
	"base:SmartContract" -> "xsd:string" [ label = "base:version" ];
	"base:EnumType" -> "xsd:string" [ label = "base:option" ];
	"base:SmartContract" -> "base:Import" [ label = "base:hasImport" ];
	"base:EventSpecification" -> "xsd:string" [ label = "base:eventName" ];
	"base:ArrayValue" -> "xsd:short" [ label = "base:hasIndex" ];
	"base:ModifierSpecification" -> "base:ParameterVariableSpecification" [ label = "base:hasModifierArguments" ];
	"base:FunctionSpecification" -> "xsd:string" [ label = "base:functionName" ];
	"base:FunctionSpecification" -> "base:ParameterVariableSpecification" [ label = "base:hasFunctionReturn" ];
	"base:ParameterVariableSpecification" -> "xsd:string" [ label = "base:hasParameterName" ];
	"base:SingleMemoryType" -> "xsd:short" [ label = "base:memory" ];
	"base:Contract" -> "base:UsingForDirective" [ label = "base:hasContractUsingForDirective" ];
	"base:FunctionBehaviour" -> "base:Visibility" [ label = "base:hasFunctionVisibilty" ];
	"base:ArrayType" -> "base:Type" [ label = "base:hasType" ];
	"base:UsingForDirective" -> "base:Library" [ label = "base:isUsingLibrary" ];
	"base:ArrayValue" -> "base:ArrayValueSpecification" [ label = "base:hasIndexArrayValue" ];
	"base:StringValue" -> "xsd:string" [ label = "base:simpleString" ];
	"base:Contract" -> "base:AttributeSpecification" [ label = "base:hasContractAttribute" ];
	"base:NonConstantAttributeSpecification" -> "base:Visibility" [ label = "base:hasAttributeVisibility" ];
	"base:FunctionSpecification" -> "xsd:string" [ label = "base:functionCode" ];
	"base:ArrayAttributeSpecification" -> "base:ArrayType" [ label = "base:hasNonConstantArrayType" ];
	"base:ArrayValueSpecification" -> "base:ArrayValue" [ label = "base:hasArrayValue" ];
	"base:Contract" -> "base:ConstructorSpecification" [ label = "base:hasContractConstructor" ];
	"base:ConstructorSpecification" -> "xsd:string" [ label = "base:constructorCode" ];
	"base:ModifierSpecification" -> "xsd:string" [ label = "base:modifierCode" ];
	"base:ParameterTypeWithDataLocation" -> "base:DataLocation" [ label = "base:hasParameterTypeWithDataLocation" ];
	"base:ModifierSpecification" -> "base:ModifierBehaviour" [ label = "base:hasModifierBehaviour" ];
	"base:NonConstantAttributeSpecification" -> "base:ValueSpecification" [ label = "base:hasAttributeValue" ];
	"base:EventSpecification" -> "xsd:boolean" [ label = "base:isAnonymous" ];
	"base:SmartContract" -> "base:FunctionSpecification" [ label = "base:hasImplementationFunction" ];
	"base:ArrayDimension" -> "xsd:short" [ label = "base:index" ];
	"base:SmartContract" -> "base:ModifierSpecification" [ label = "base:hasImplementationModifier" ];
	"base:ModifierOverrideSpecification" -> "base:ModifierOverrideTipe" [ label = "base:hasModifierOverrideType" ];
	"base:FunctionBehaviour" -> "base:ModifierSpecification" [ label = "base:isDefinedAs" ];
	"base:FunctionSpecification" -> "base:FunctionBehaviour" [ label = "base:hasFunctionBehaviour" ];
	"base:MapAttributeSpecification" -> "base:MapType" [ label = "base:hasNonConstantMapType" ];
	"base:ParameterVariableSpecification" -> "base:ParameterType" [ label = "base:hasParameterType" ];
	"base:GenericValue" -> "owl:Thing" [ label = "base:simpleGeneric" ];
	"base:Abstract" -> "base:CodelessFunctionSpecification" [ label = "base:hasContractAbstractFunction" ];
	"base:NonConstantAttributeSpecification" -> "xsd:boolean" [ label = "base:isInmutable" ];
	"base:ParameterVariableSpecification" -> "xsd:short" [ label = "base:hasParameterPosition" ];
	"base:ReceiveSpecification" -> "base:FRBehaviour" [ label = "base:hasFallbackVisibility" ];
	"base:EventSpecification" -> "base:ParameterVariableSpecification" [ label = "base:hasEventArguments" ];
	"base:SmartContract" -> "xsd:string" [ label = "base:contractName" ];
	"base:ReceiveSpecification" -> "base:FRBehaviour" [ label = "base:hasFallbackBehaviour" ];
	"base:UsingForDirective" -> "xsd:string" [ label = "base:usingForName" ];
	"base:SmartContract" -> "base:EventSpecification" [ label = "base:hasImplementationEvent" ];
	"base:Library" -> "base:ContractAttributeSpecification" [ label = "base:hasConstantAttribute" ];
	"base:NonConstantAttributeSpecification" -> "base:NonConstantType" [ label = "base:hasNonConstantType" ];
	"base:Interface" -> "base:CodelessFunctionSpecification" [ label = "base:hasInterfaceFunction" ];
	"base:SmartContract" -> "base:Interface" [ label = "base:hasInterface" ];
	"base:SmartContract" -> "base:StructType" [ label = "base:hasImplementationStructType" ];
	"base:Contract" -> "base:Contract" [ label = "base:hasInheritance" ];
	"base:ArrayType" -> "base:ArrayDimension" [ label = "base:hasArrayDimension" ];
	"base:FallbackSpecification" -> "xsd:string" [ label = "base:fallbackCode" ];
	"base:ModifierSpecification" -> "xsd:string" [ label = "base:modifierName" ];
	"base:ValueSpecification" -> "xsd:boolean" [ label = "base:isConstant" ];
	"base:ArrayDimension" -> "xsd:short" [ label = "base:lenght" ];
	"base:FallbackSpecification" -> "base:FRBehaviour" [ label = "base:hasReceiveBehaviour" ];
	"base:MapType" -> "base:MapKeyType" [ label = "base:hasKeyMap" ];
	"base:Contract" -> "base:ReceiveSpecification" [ label = "base:hasContractReceive" ];
	"base:CodelessFunctionSpecification" -> "xsd:string" [ label = "base:codelessFunctionName" ];
	"base:MapType" -> "owl:Thing" [ label = "base:hasValueMap" ];
	"base:BoolValue" -> "xsd:string" [ label = "base:simpleBool" ];
	"base:FallbackSpecification" -> "base:FRBehaviour" [ label = "base:hasReceiveVisibility" ];
	"base:BytesValue" -> "xsd:string" [ label = "base:simpleBytes" ];
	"base:ContractAttributeSpecification" -> "base:ConstantType" [ label = "base:hasConstantType" ];

}
